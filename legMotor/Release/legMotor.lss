
legMotor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000039c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          0000000e  00800100  00800100  00000410  2**0
                  ALLOC
  2 .stab         000006cc  00000000  00000000  00000410  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000090  00000000  00000000  00000adc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 68 01 	jmp	0x2d0	; 0x2d0 <__vector_24>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	ae 30       	cpi	r26, 0x0E	; 14
  80:	b1 07       	cpc	r27, r17
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 aa 01 	call	0x354	; 0x354 <main>
  88:	0c 94 cc 01 	jmp	0x398	; 0x398 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <initHbridge>:
  90:	8f ef       	ldi	r24, 0xFF	; 255
  92:	8a b9       	out	0x0a, r24	; 10
  94:	84 b9       	out	0x04, r24	; 4
  96:	80 e9       	ldi	r24, 0x90	; 144
  98:	8b b9       	out	0x0b, r24	; 11
  9a:	84 e1       	ldi	r24, 0x14	; 20
  9c:	85 b9       	out	0x05, r24	; 5
  9e:	83 e0       	ldi	r24, 0x03	; 3
  a0:	84 bd       	out	0x24, r24	; 36
  a2:	92 e0       	ldi	r25, 0x02	; 2
  a4:	95 bd       	out	0x25, r25	; 37
  a6:	80 93 b0 00 	sts	0x00B0, r24
  aa:	80 e2       	ldi	r24, 0x20	; 32
  ac:	80 93 b1 00 	sts	0x00B1, r24
  b0:	17 bc       	out	0x27, r1	; 39
  b2:	18 bc       	out	0x28, r1	; 40
  b4:	10 92 b3 00 	sts	0x00B3, r1
  b8:	10 92 b4 00 	sts	0x00B4, r1
  bc:	08 95       	ret

000000be <D_portDirectionChange>:
  be:	17 bc       	out	0x27, r1	; 39
  c0:	18 bc       	out	0x28, r1	; 40
  c2:	33 e0       	ldi	r19, 0x03	; 3
  c4:	34 bd       	out	0x24, r19	; 36
  c6:	20 e9       	ldi	r18, 0x90	; 144
  c8:	2b b9       	out	0x0b, r18	; 11
  ca:	fc 01       	movw	r30, r24
  cc:	80 81       	ld	r24, Z
  ce:	82 30       	cpi	r24, 0x02	; 2
  d0:	51 f0       	breq	.+20     	; 0xe6 <D_portDirectionChange+0x28>
  d2:	83 30       	cpi	r24, 0x03	; 3
  d4:	61 f0       	breq	.+24     	; 0xee <D_portDirectionChange+0x30>
  d6:	81 30       	cpi	r24, 0x01	; 1
  d8:	19 f0       	breq	.+6      	; 0xe0 <D_portDirectionChange+0x22>
  da:	2b b9       	out	0x0b, r18	; 11
  dc:	34 bd       	out	0x24, r19	; 36
  de:	08 95       	ret
  e0:	2b b9       	out	0x0b, r18	; 11
  e2:	83 ea       	ldi	r24, 0xA3	; 163
  e4:	07 c0       	rjmp	.+14     	; 0xf4 <D_portDirectionChange+0x36>
  e6:	80 e8       	ldi	r24, 0x80	; 128
  e8:	8b b9       	out	0x0b, r24	; 11
  ea:	83 e8       	ldi	r24, 0x83	; 131
  ec:	03 c0       	rjmp	.+6      	; 0xf4 <D_portDirectionChange+0x36>
  ee:	80 e1       	ldi	r24, 0x10	; 16
  f0:	8b b9       	out	0x0b, r24	; 11
  f2:	83 e2       	ldi	r24, 0x23	; 35
  f4:	84 bd       	out	0x24, r24	; 36
  f6:	08 95       	ret

000000f8 <D_pwmControl>:
  f8:	df 93       	push	r29
  fa:	cf 93       	push	r28
  fc:	00 d0       	rcall	.+0      	; 0xfe <D_pwmControl+0x6>
  fe:	cd b7       	in	r28, 0x3d	; 61
 100:	de b7       	in	r29, 0x3e	; 62
 102:	89 83       	std	Y+1, r24	; 0x01
 104:	90 91 01 01 	lds	r25, 0x0101
 108:	98 17       	cp	r25, r24
 10a:	41 f0       	breq	.+16     	; 0x11c <D_pwmControl+0x24>
 10c:	80 93 01 01 	sts	0x0101, r24
 110:	ce 01       	movw	r24, r28
 112:	01 96       	adiw	r24, 0x01	; 1
 114:	6a 83       	std	Y+2, r22	; 0x02
 116:	0e 94 5f 00 	call	0xbe	; 0xbe <D_portDirectionChange>
 11a:	6a 81       	ldd	r22, Y+2	; 0x02
 11c:	67 bd       	out	0x27, r22	; 39
 11e:	68 bd       	out	0x28, r22	; 40
 120:	0f 90       	pop	r0
 122:	0f 90       	pop	r0
 124:	cf 91       	pop	r28
 126:	df 91       	pop	r29
 128:	08 95       	ret

0000012a <B_portDirectionChange>:
 12a:	10 92 b3 00 	sts	0x00B3, r1
 12e:	10 92 b4 00 	sts	0x00B4, r1
 132:	33 e0       	ldi	r19, 0x03	; 3
 134:	30 93 b0 00 	sts	0x00B0, r19
 138:	24 e1       	ldi	r18, 0x14	; 20
 13a:	25 b9       	out	0x05, r18	; 5
 13c:	fc 01       	movw	r30, r24
 13e:	80 81       	ld	r24, Z
 140:	82 30       	cpi	r24, 0x02	; 2
 142:	59 f0       	breq	.+22     	; 0x15a <B_portDirectionChange+0x30>
 144:	83 30       	cpi	r24, 0x03	; 3
 146:	69 f0       	breq	.+26     	; 0x162 <B_portDirectionChange+0x38>
 148:	81 30       	cpi	r24, 0x01	; 1
 14a:	21 f0       	breq	.+8      	; 0x154 <B_portDirectionChange+0x2a>
 14c:	25 b9       	out	0x05, r18	; 5
 14e:	30 93 b0 00 	sts	0x00B0, r19
 152:	08 95       	ret
 154:	25 b9       	out	0x05, r18	; 5
 156:	83 ea       	ldi	r24, 0xA3	; 163
 158:	07 c0       	rjmp	.+14     	; 0x168 <B_portDirectionChange+0x3e>
 15a:	84 e0       	ldi	r24, 0x04	; 4
 15c:	85 b9       	out	0x05, r24	; 5
 15e:	83 e8       	ldi	r24, 0x83	; 131
 160:	03 c0       	rjmp	.+6      	; 0x168 <B_portDirectionChange+0x3e>
 162:	80 e1       	ldi	r24, 0x10	; 16
 164:	85 b9       	out	0x05, r24	; 5
 166:	83 e2       	ldi	r24, 0x23	; 35
 168:	80 93 b0 00 	sts	0x00B0, r24
 16c:	08 95       	ret

0000016e <B_pwmControl>:
 16e:	df 93       	push	r29
 170:	cf 93       	push	r28
 172:	00 d0       	rcall	.+0      	; 0x174 <B_pwmControl+0x6>
 174:	cd b7       	in	r28, 0x3d	; 61
 176:	de b7       	in	r29, 0x3e	; 62
 178:	89 83       	std	Y+1, r24	; 0x01
 17a:	90 91 00 01 	lds	r25, 0x0100
 17e:	98 17       	cp	r25, r24
 180:	41 f0       	breq	.+16     	; 0x192 <B_pwmControl+0x24>
 182:	80 93 00 01 	sts	0x0100, r24
 186:	ce 01       	movw	r24, r28
 188:	01 96       	adiw	r24, 0x01	; 1
 18a:	6a 83       	std	Y+2, r22	; 0x02
 18c:	0e 94 95 00 	call	0x12a	; 0x12a <B_portDirectionChange>
 190:	6a 81       	ldd	r22, Y+2	; 0x02
 192:	60 93 b3 00 	sts	0x00B3, r22
 196:	60 93 b4 00 	sts	0x00B4, r22
 19a:	0f 90       	pop	r0
 19c:	0f 90       	pop	r0
 19e:	cf 91       	pop	r28
 1a0:	df 91       	pop	r29
 1a2:	08 95       	ret

000001a4 <I2CSlave_do>:
 1a4:	80 91 b9 00 	lds	r24, 0x00B9
 1a8:	80 3a       	cpi	r24, 0xA0	; 160
 1aa:	79 f1       	breq	.+94     	; 0x20a <I2CSlave_do+0x66>
 1ac:	81 3a       	cpi	r24, 0xA1	; 161
 1ae:	28 f4       	brcc	.+10     	; 0x1ba <I2CSlave_do+0x16>
 1b0:	80 36       	cpi	r24, 0x60	; 96
 1b2:	51 f0       	breq	.+20     	; 0x1c8 <I2CSlave_do+0x24>
 1b4:	80 38       	cpi	r24, 0x80	; 128
 1b6:	89 f5       	brne	.+98     	; 0x21a <I2CSlave_do+0x76>
 1b8:	0e c0       	rjmp	.+28     	; 0x1d6 <I2CSlave_do+0x32>
 1ba:	88 3b       	cpi	r24, 0xB8	; 184
 1bc:	d9 f0       	breq	.+54     	; 0x1f4 <I2CSlave_do+0x50>
 1be:	80 3c       	cpi	r24, 0xC0	; 192
 1c0:	21 f1       	breq	.+72     	; 0x20a <I2CSlave_do+0x66>
 1c2:	88 3a       	cpi	r24, 0xA8	; 168
 1c4:	51 f5       	brne	.+84     	; 0x21a <I2CSlave_do+0x76>
 1c6:	0f c0       	rjmp	.+30     	; 0x1e6 <I2CSlave_do+0x42>
 1c8:	80 91 bb 00 	lds	r24, 0x00BB
 1cc:	e0 91 0a 01 	lds	r30, 0x010A
 1d0:	f0 91 0b 01 	lds	r31, 0x010B
 1d4:	06 c0       	rjmp	.+12     	; 0x1e2 <I2CSlave_do+0x3e>
 1d6:	80 91 bb 00 	lds	r24, 0x00BB
 1da:	e0 91 08 01 	lds	r30, 0x0108
 1de:	f0 91 09 01 	lds	r31, 0x0109
 1e2:	09 95       	icall
 1e4:	0e c0       	rjmp	.+28     	; 0x202 <I2CSlave_do+0x5e>
 1e6:	80 91 bb 00 	lds	r24, 0x00BB
 1ea:	e0 91 0a 01 	lds	r30, 0x010A
 1ee:	f0 91 0b 01 	lds	r31, 0x010B
 1f2:	09 95       	icall
 1f4:	e0 91 04 01 	lds	r30, 0x0104
 1f8:	f0 91 05 01 	lds	r31, 0x0105
 1fc:	09 95       	icall
 1fe:	80 93 bb 00 	sts	0x00BB, r24
 202:	84 ec       	ldi	r24, 0xC4	; 196
 204:	80 93 bc 00 	sts	0x00BC, r24
 208:	08 95       	ret
 20a:	e0 91 06 01 	lds	r30, 0x0106
 20e:	f0 91 07 01 	lds	r31, 0x0107
 212:	09 95       	icall
 214:	84 ec       	ldi	r24, 0xC4	; 196
 216:	80 93 bc 00 	sts	0x00BC, r24
 21a:	08 95       	ret

0000021c <I2CSlave_setSendEvent>:
 21c:	90 93 05 01 	sts	0x0105, r25
 220:	80 93 04 01 	sts	0x0104, r24
 224:	08 95       	ret

00000226 <i2c_init_Handler>:
 226:	08 95       	ret

00000228 <i2cRecieveHandler1>:
 228:	20 91 02 01 	lds	r18, 0x0102
 22c:	30 91 03 01 	lds	r19, 0x0103
 230:	21 15       	cp	r18, r1
 232:	31 05       	cpc	r19, r1
 234:	49 f4       	brne	.+18     	; 0x248 <i2cRecieveHandler1+0x20>
 236:	80 93 0c 01 	sts	0x010C, r24
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	90 93 03 01 	sts	0x0103, r25
 242:	80 93 02 01 	sts	0x0102, r24
 246:	08 95       	ret
 248:	21 30       	cpi	r18, 0x01	; 1
 24a:	31 05       	cpc	r19, r1
 24c:	31 f4       	brne	.+12     	; 0x25a <i2cRecieveHandler1+0x32>
 24e:	80 93 0d 01 	sts	0x010D, r24
 252:	10 92 03 01 	sts	0x0103, r1
 256:	10 92 02 01 	sts	0x0102, r1
 25a:	08 95       	ret

0000025c <i2c_set_stop_Handler>:
 25c:	80 91 0c 01 	lds	r24, 0x010C
 260:	98 2f       	mov	r25, r24
 262:	9e 7f       	andi	r25, 0xFE	; 254
 264:	19 f4       	brne	.+6      	; 0x26c <i2c_set_stop_Handler+0x10>
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	60 e0       	ldi	r22, 0x00	; 0
 26a:	0b c0       	rjmp	.+22     	; 0x282 <i2c_set_stop_Handler+0x26>
 26c:	68 2f       	mov	r22, r24
 26e:	66 95       	lsr	r22
 270:	80 fd       	sbrc	r24, 0
 272:	04 c0       	rjmp	.+8      	; 0x27c <i2c_set_stop_Handler+0x20>
 274:	66 0f       	add	r22, r22
 276:	6f 5f       	subi	r22, 0xFF	; 255
 278:	82 e0       	ldi	r24, 0x02	; 2
 27a:	03 c0       	rjmp	.+6      	; 0x282 <i2c_set_stop_Handler+0x26>
 27c:	66 0f       	add	r22, r22
 27e:	6f 5f       	subi	r22, 0xFF	; 255
 280:	83 e0       	ldi	r24, 0x03	; 3
 282:	0e 94 7c 00 	call	0xf8	; 0xf8 <D_pwmControl>
 286:	80 91 0d 01 	lds	r24, 0x010D
 28a:	98 2f       	mov	r25, r24
 28c:	9e 7f       	andi	r25, 0xFE	; 254
 28e:	19 f4       	brne	.+6      	; 0x296 <i2c_set_stop_Handler+0x3a>
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	60 e0       	ldi	r22, 0x00	; 0
 294:	0b c0       	rjmp	.+22     	; 0x2ac <i2c_set_stop_Handler+0x50>
 296:	68 2f       	mov	r22, r24
 298:	66 95       	lsr	r22
 29a:	80 fd       	sbrc	r24, 0
 29c:	04 c0       	rjmp	.+8      	; 0x2a6 <i2c_set_stop_Handler+0x4a>
 29e:	66 0f       	add	r22, r22
 2a0:	6f 5f       	subi	r22, 0xFF	; 255
 2a2:	82 e0       	ldi	r24, 0x02	; 2
 2a4:	03 c0       	rjmp	.+6      	; 0x2ac <i2c_set_stop_Handler+0x50>
 2a6:	66 0f       	add	r22, r22
 2a8:	6f 5f       	subi	r22, 0xFF	; 255
 2aa:	83 e0       	ldi	r24, 0x03	; 3
 2ac:	0e 94 b7 00 	call	0x16e	; 0x16e <B_pwmControl>
 2b0:	10 92 03 01 	sts	0x0103, r1
 2b4:	10 92 02 01 	sts	0x0102, r1
 2b8:	08 95       	ret

000002ba <I2CSlave_init>:
 2ba:	88 0f       	add	r24, r24
 2bc:	80 93 ba 00 	sts	0x00BA, r24
 2c0:	61 30       	cpi	r22, 0x01	; 1
 2c2:	11 f4       	brne	.+4      	; 0x2c8 <I2CSlave_init+0xe>
 2c4:	85 e4       	ldi	r24, 0x45	; 69
 2c6:	01 c0       	rjmp	.+2      	; 0x2ca <I2CSlave_init+0x10>
 2c8:	84 e4       	ldi	r24, 0x44	; 68
 2ca:	80 93 bc 00 	sts	0x00BC, r24
 2ce:	08 95       	ret

000002d0 <__vector_24>:
 2d0:	1f 92       	push	r1
 2d2:	0f 92       	push	r0
 2d4:	0f b6       	in	r0, 0x3f	; 63
 2d6:	0f 92       	push	r0
 2d8:	11 24       	eor	r1, r1
 2da:	2f 93       	push	r18
 2dc:	3f 93       	push	r19
 2de:	4f 93       	push	r20
 2e0:	5f 93       	push	r21
 2e2:	6f 93       	push	r22
 2e4:	7f 93       	push	r23
 2e6:	8f 93       	push	r24
 2e8:	9f 93       	push	r25
 2ea:	af 93       	push	r26
 2ec:	bf 93       	push	r27
 2ee:	ef 93       	push	r30
 2f0:	ff 93       	push	r31
 2f2:	f8 94       	cli
 2f4:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <I2CSlave_do>
 2f8:	78 94       	sei
 2fa:	ff 91       	pop	r31
 2fc:	ef 91       	pop	r30
 2fe:	bf 91       	pop	r27
 300:	af 91       	pop	r26
 302:	9f 91       	pop	r25
 304:	8f 91       	pop	r24
 306:	7f 91       	pop	r23
 308:	6f 91       	pop	r22
 30a:	5f 91       	pop	r21
 30c:	4f 91       	pop	r20
 30e:	3f 91       	pop	r19
 310:	2f 91       	pop	r18
 312:	0f 90       	pop	r0
 314:	0f be       	out	0x3f, r0	; 63
 316:	0f 90       	pop	r0
 318:	1f 90       	pop	r1
 31a:	18 95       	reti

0000031c <I2CSlave_setInitEvent>:
 31c:	90 93 0b 01 	sts	0x010B, r25
 320:	80 93 0a 01 	sts	0x010A, r24
 324:	08 95       	ret

00000326 <I2CSlave_setReceiveEvent>:
 326:	90 93 09 01 	sts	0x0109, r25
 32a:	80 93 08 01 	sts	0x0108, r24
 32e:	08 95       	ret

00000330 <I2CSlave_setStopEvent>:
 330:	90 93 07 01 	sts	0x0107, r25
 334:	80 93 06 01 	sts	0x0106, r24
 338:	08 95       	ret

0000033a <I2CSlave_isTWINT>:
 33a:	80 91 bc 00 	lds	r24, 0x00BC
 33e:	88 1f       	adc	r24, r24
 340:	88 27       	eor	r24, r24
 342:	88 1f       	adc	r24, r24
 344:	08 95       	ret

00000346 <I2CSlave_com>:
 346:	0e 94 9d 01 	call	0x33a	; 0x33a <I2CSlave_isTWINT>
 34a:	88 23       	and	r24, r24
 34c:	11 f0       	breq	.+4      	; 0x352 <I2CSlave_com+0xc>
 34e:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <I2CSlave_do>
 352:	08 95       	ret

00000354 <main>:
 354:	0e 94 48 00 	call	0x90	; 0x90 <initHbridge>
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	60 e0       	ldi	r22, 0x00	; 0
 35c:	0e 94 5d 01 	call	0x2ba	; 0x2ba <I2CSlave_init>
 360:	83 e1       	ldi	r24, 0x13	; 19
 362:	91 e0       	ldi	r25, 0x01	; 1
 364:	90 93 0b 01 	sts	0x010B, r25
 368:	80 93 0a 01 	sts	0x010A, r24
 36c:	84 e1       	ldi	r24, 0x14	; 20
 36e:	91 e0       	ldi	r25, 0x01	; 1
 370:	90 93 09 01 	sts	0x0109, r25
 374:	80 93 08 01 	sts	0x0108, r24
 378:	8e e0       	ldi	r24, 0x0E	; 14
 37a:	91 e0       	ldi	r25, 0x01	; 1
 37c:	90 93 05 01 	sts	0x0105, r25
 380:	80 93 04 01 	sts	0x0104, r24
 384:	8e e2       	ldi	r24, 0x2E	; 46
 386:	91 e0       	ldi	r25, 0x01	; 1
 388:	90 93 07 01 	sts	0x0107, r25
 38c:	80 93 06 01 	sts	0x0106, r24
 390:	0e 94 a3 01 	call	0x346	; 0x346 <I2CSlave_com>
 394:	fd cf       	rjmp	.-6      	; 0x390 <main+0x3c>

00000396 <i2cSendHandler>:
 396:	08 95       	ret

00000398 <_exit>:
 398:	f8 94       	cli

0000039a <__stop_program>:
 39a:	ff cf       	rjmp	.-2      	; 0x39a <__stop_program>
