
legMotor_relay.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000604  00000698  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000604  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  00800104  00800104  0000069c  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  0000069c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000090  00000000  00000000  00000d68  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 dc 02 	jmp	0x5b8	; 0x5b8 <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__vector_24>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e0       	ldi	r30, 0x04	; 4
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	11 e0       	ldi	r17, 0x01	; 1
  8c:	a4 e0       	ldi	r26, 0x04	; 4
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 32       	cpi	r26, 0x20	; 32
  96:	b1 07       	cpc	r27, r17
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <main>
  9e:	0c 94 00 03 	jmp	0x600	; 0x600 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <I2CSlave_do>:
  a6:	80 91 b9 00 	lds	r24, 0x00B9
  aa:	80 3a       	cpi	r24, 0xA0	; 160
  ac:	79 f1       	breq	.+94     	; 0x10c <I2CSlave_do+0x66>
  ae:	81 3a       	cpi	r24, 0xA1	; 161
  b0:	28 f4       	brcc	.+10     	; 0xbc <I2CSlave_do+0x16>
  b2:	80 36       	cpi	r24, 0x60	; 96
  b4:	51 f0       	breq	.+20     	; 0xca <I2CSlave_do+0x24>
  b6:	80 38       	cpi	r24, 0x80	; 128
  b8:	89 f5       	brne	.+98     	; 0x11c <I2CSlave_do+0x76>
  ba:	0e c0       	rjmp	.+28     	; 0xd8 <I2CSlave_do+0x32>
  bc:	88 3b       	cpi	r24, 0xB8	; 184
  be:	d9 f0       	breq	.+54     	; 0xf6 <I2CSlave_do+0x50>
  c0:	80 3c       	cpi	r24, 0xC0	; 192
  c2:	21 f1       	breq	.+72     	; 0x10c <I2CSlave_do+0x66>
  c4:	88 3a       	cpi	r24, 0xA8	; 168
  c6:	51 f5       	brne	.+84     	; 0x11c <I2CSlave_do+0x76>
  c8:	0f c0       	rjmp	.+30     	; 0xe8 <I2CSlave_do+0x42>
  ca:	80 91 bb 00 	lds	r24, 0x00BB
  ce:	e0 91 1e 01 	lds	r30, 0x011E
  d2:	f0 91 1f 01 	lds	r31, 0x011F
  d6:	06 c0       	rjmp	.+12     	; 0xe4 <I2CSlave_do+0x3e>
  d8:	80 91 bb 00 	lds	r24, 0x00BB
  dc:	e0 91 1c 01 	lds	r30, 0x011C
  e0:	f0 91 1d 01 	lds	r31, 0x011D
  e4:	09 95       	icall
  e6:	0e c0       	rjmp	.+28     	; 0x104 <I2CSlave_do+0x5e>
  e8:	80 91 bb 00 	lds	r24, 0x00BB
  ec:	e0 91 1e 01 	lds	r30, 0x011E
  f0:	f0 91 1f 01 	lds	r31, 0x011F
  f4:	09 95       	icall
  f6:	e0 91 18 01 	lds	r30, 0x0118
  fa:	f0 91 19 01 	lds	r31, 0x0119
  fe:	09 95       	icall
 100:	80 93 bb 00 	sts	0x00BB, r24
 104:	84 ec       	ldi	r24, 0xC4	; 196
 106:	80 93 bc 00 	sts	0x00BC, r24
 10a:	08 95       	ret
 10c:	e0 91 1a 01 	lds	r30, 0x011A
 110:	f0 91 1b 01 	lds	r31, 0x011B
 114:	09 95       	icall
 116:	84 ec       	ldi	r24, 0xC4	; 196
 118:	80 93 bc 00 	sts	0x00BC, r24
 11c:	08 95       	ret

0000011e <initHandler>:
 11e:	08 95       	ret

00000120 <recieveHandler>:
 120:	90 91 06 01 	lds	r25, 0x0106
 124:	e9 2f       	mov	r30, r25
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	ec 5f       	subi	r30, 0xFC	; 252
 12a:	fe 4f       	sbci	r31, 0xFE	; 254
 12c:	80 83       	st	Z, r24
 12e:	9f 5f       	subi	r25, 0xFF	; 255
 130:	90 93 06 01 	sts	0x0106, r25
 134:	08 95       	ret

00000136 <sendHandler>:
 136:	90 91 07 01 	lds	r25, 0x0107
 13a:	e9 2f       	mov	r30, r25
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	ec 5f       	subi	r30, 0xFC	; 252
 140:	fe 4f       	sbci	r31, 0xFE	; 254
 142:	80 81       	ld	r24, Z
 144:	9f 5f       	subi	r25, 0xFF	; 255
 146:	90 93 07 01 	sts	0x0107, r25
 14a:	08 95       	ret

0000014c <stopHandler>:
 14c:	10 92 06 01 	sts	0x0106, r1
 150:	10 92 07 01 	sts	0x0107, r1
 154:	08 95       	ret

00000156 <wait_motor_a_chattering>:
 156:	80 91 16 01 	lds	r24, 0x0116
 15a:	90 91 17 01 	lds	r25, 0x0117
 15e:	87 30       	cpi	r24, 0x07	; 7
 160:	91 05       	cpc	r25, r1
 162:	34 f4       	brge	.+12     	; 0x170 <wait_motor_a_chattering+0x1a>
 164:	01 96       	adiw	r24, 0x01	; 1
 166:	90 93 17 01 	sts	0x0117, r25
 16a:	80 93 16 01 	sts	0x0116, r24
 16e:	08 95       	ret
 170:	10 92 17 01 	sts	0x0117, r1
 174:	10 92 16 01 	sts	0x0116, r1
 178:	86 ed       	ldi	r24, 0xD6	; 214
 17a:	91 e0       	ldi	r25, 0x01	; 1
 17c:	90 93 01 01 	sts	0x0101, r25
 180:	80 93 00 01 	sts	0x0100, r24
 184:	08 95       	ret

00000186 <wait_motor_b_chattering>:
 186:	80 91 14 01 	lds	r24, 0x0114
 18a:	90 91 15 01 	lds	r25, 0x0115
 18e:	87 30       	cpi	r24, 0x07	; 7
 190:	91 05       	cpc	r25, r1
 192:	34 f4       	brge	.+12     	; 0x1a0 <wait_motor_b_chattering+0x1a>
 194:	01 96       	adiw	r24, 0x01	; 1
 196:	90 93 15 01 	sts	0x0115, r25
 19a:	80 93 14 01 	sts	0x0114, r24
 19e:	08 95       	ret
 1a0:	10 92 15 01 	sts	0x0115, r1
 1a4:	10 92 14 01 	sts	0x0114, r1
 1a8:	8c e4       	ldi	r24, 0x4C	; 76
 1aa:	92 e0       	ldi	r25, 0x02	; 2
 1ac:	90 93 03 01 	sts	0x0103, r25
 1b0:	80 93 02 01 	sts	0x0102, r24
 1b4:	08 95       	ret

000001b6 <I2CSlave_init>:
 1b6:	88 0f       	add	r24, r24
 1b8:	80 93 ba 00 	sts	0x00BA, r24
 1bc:	61 30       	cpi	r22, 0x01	; 1
 1be:	11 f4       	brne	.+4      	; 0x1c4 <I2CSlave_init+0xe>
 1c0:	85 e4       	ldi	r24, 0x45	; 69
 1c2:	01 c0       	rjmp	.+2      	; 0x1c6 <I2CSlave_init+0x10>
 1c4:	84 e4       	ldi	r24, 0x44	; 68
 1c6:	80 93 bc 00 	sts	0x00BC, r24
 1ca:	08 95       	ret

000001cc <__vector_24>:
 1cc:	1f 92       	push	r1
 1ce:	0f 92       	push	r0
 1d0:	0f b6       	in	r0, 0x3f	; 63
 1d2:	0f 92       	push	r0
 1d4:	11 24       	eor	r1, r1
 1d6:	2f 93       	push	r18
 1d8:	3f 93       	push	r19
 1da:	4f 93       	push	r20
 1dc:	5f 93       	push	r21
 1de:	6f 93       	push	r22
 1e0:	7f 93       	push	r23
 1e2:	8f 93       	push	r24
 1e4:	9f 93       	push	r25
 1e6:	af 93       	push	r26
 1e8:	bf 93       	push	r27
 1ea:	ef 93       	push	r30
 1ec:	ff 93       	push	r31
 1ee:	f8 94       	cli
 1f0:	0e 94 53 00 	call	0xa6	; 0xa6 <I2CSlave_do>
 1f4:	78 94       	sei
 1f6:	ff 91       	pop	r31
 1f8:	ef 91       	pop	r30
 1fa:	bf 91       	pop	r27
 1fc:	af 91       	pop	r26
 1fe:	9f 91       	pop	r25
 200:	8f 91       	pop	r24
 202:	7f 91       	pop	r23
 204:	6f 91       	pop	r22
 206:	5f 91       	pop	r21
 208:	4f 91       	pop	r20
 20a:	3f 91       	pop	r19
 20c:	2f 91       	pop	r18
 20e:	0f 90       	pop	r0
 210:	0f be       	out	0x3f, r0	; 63
 212:	0f 90       	pop	r0
 214:	1f 90       	pop	r1
 216:	18 95       	reti

00000218 <I2CSlave_setInitEvent>:
 218:	90 93 1f 01 	sts	0x011F, r25
 21c:	80 93 1e 01 	sts	0x011E, r24
 220:	08 95       	ret

00000222 <I2CSlave_setReceiveEvent>:
 222:	90 93 1d 01 	sts	0x011D, r25
 226:	80 93 1c 01 	sts	0x011C, r24
 22a:	08 95       	ret

0000022c <I2CSlave_setStopEvent>:
 22c:	90 93 1b 01 	sts	0x011B, r25
 230:	80 93 1a 01 	sts	0x011A, r24
 234:	08 95       	ret

00000236 <I2CSlave_setSendEvent>:
 236:	90 93 19 01 	sts	0x0119, r25
 23a:	80 93 18 01 	sts	0x0118, r24
 23e:	08 95       	ret

00000240 <I2CSlave_isTWINT>:
 240:	80 91 bc 00 	lds	r24, 0x00BC
 244:	88 1f       	adc	r24, r24
 246:	88 27       	eor	r24, r24
 248:	88 1f       	adc	r24, r24
 24a:	08 95       	ret

0000024c <I2CSlave_com>:
 24c:	0e 94 20 01 	call	0x240	; 0x240 <I2CSlave_isTWINT>
 250:	88 23       	and	r24, r24
 252:	11 f0       	breq	.+4      	; 0x258 <I2CSlave_com+0xc>
 254:	0e 94 53 00 	call	0xa6	; 0xa6 <I2CSlave_do>
 258:	08 95       	ret

0000025a <chengeSignalToSpeed>:
 25a:	28 2f       	mov	r18, r24
 25c:	26 95       	lsr	r18
 25e:	30 e0       	ldi	r19, 0x00	; 0
 260:	80 ff       	sbrs	r24, 0
 262:	03 c0       	rjmp	.+6      	; 0x26a <chengeSignalToSpeed+0x10>
 264:	30 95       	com	r19
 266:	21 95       	neg	r18
 268:	3f 4f       	sbci	r19, 0xFF	; 255
 26a:	c9 01       	movw	r24, r18
 26c:	08 95       	ret

0000026e <timer_pwm_init>:
 26e:	8f ef       	ldi	r24, 0xFF	; 255
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	90 93 89 00 	sts	0x0089, r25
 276:	80 93 88 00 	sts	0x0088, r24
 27a:	90 93 8b 00 	sts	0x008B, r25
 27e:	80 93 8a 00 	sts	0x008A, r24
 282:	81 ef       	ldi	r24, 0xF1	; 241
 284:	80 93 80 00 	sts	0x0080, r24
 288:	8a e0       	ldi	r24, 0x0A	; 10
 28a:	80 93 81 00 	sts	0x0081, r24
 28e:	08 95       	ret

00000290 <io_init>:
 290:	15 b8       	out	0x05, r1	; 5
 292:	8e e1       	ldi	r24, 0x1E	; 30
 294:	84 b9       	out	0x04, r24	; 4
 296:	08 95       	ret

00000298 <timer0_init>:
 298:	83 e0       	ldi	r24, 0x03	; 3
 29a:	85 bd       	out	0x25, r24	; 37
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	80 93 6e 00 	sts	0x006E, r24
 2a2:	08 95       	ret

000002a4 <main>:
 2a4:	cf 93       	push	r28
 2a6:	df 93       	push	r29
 2a8:	0e 94 37 01 	call	0x26e	; 0x26e <timer_pwm_init>
 2ac:	0e 94 48 01 	call	0x290	; 0x290 <io_init>
 2b0:	0e 94 4c 01 	call	0x298	; 0x298 <timer0_init>
 2b4:	82 e0       	ldi	r24, 0x02	; 2
 2b6:	60 e0       	ldi	r22, 0x00	; 0
 2b8:	0e 94 db 00 	call	0x1b6	; 0x1b6 <I2CSlave_init>
 2bc:	8f e8       	ldi	r24, 0x8F	; 143
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	90 93 1f 01 	sts	0x011F, r25
 2c4:	80 93 1e 01 	sts	0x011E, r24
 2c8:	8b e9       	ldi	r24, 0x9B	; 155
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	90 93 19 01 	sts	0x0119, r25
 2d0:	80 93 18 01 	sts	0x0118, r24
 2d4:	80 e9       	ldi	r24, 0x90	; 144
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	90 93 1d 01 	sts	0x011D, r25
 2dc:	80 93 1c 01 	sts	0x011C, r24
 2e0:	86 ea       	ldi	r24, 0xA6	; 166
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	90 93 1b 01 	sts	0x011B, r25
 2e8:	80 93 1a 01 	sts	0x011A, r24
 2ec:	78 94       	sei
 2ee:	0e 94 26 01 	call	0x24c	; 0x24c <I2CSlave_com>
 2f2:	80 91 04 01 	lds	r24, 0x0104
 2f6:	0e 94 2d 01 	call	0x25a	; 0x25a <chengeSignalToSpeed>
 2fa:	ec 01       	movw	r28, r24
 2fc:	80 91 05 01 	lds	r24, 0x0105
 300:	0e 94 2d 01 	call	0x25a	; 0x25a <chengeSignalToSpeed>
 304:	d0 93 09 01 	sts	0x0109, r29
 308:	c0 93 08 01 	sts	0x0108, r28
 30c:	90 93 0b 01 	sts	0x010B, r25
 310:	80 93 0a 01 	sts	0x010A, r24
 314:	ec cf       	rjmp	.-40     	; 0x2ee <main+0x4a>

00000316 <check_sign>:
 316:	97 fd       	sbrc	r25, 7
 318:	03 c0       	rjmp	.+6      	; 0x320 <check_sign+0xa>
 31a:	21 e0       	ldi	r18, 0x01	; 1
 31c:	30 e0       	ldi	r19, 0x00	; 0
 31e:	02 c0       	rjmp	.+4      	; 0x324 <check_sign+0xe>
 320:	2f ef       	ldi	r18, 0xFF	; 255
 322:	3f ef       	ldi	r19, 0xFF	; 255
 324:	c9 01       	movw	r24, r18
 326:	08 95       	ret

00000328 <absolute>:
 328:	28 2f       	mov	r18, r24
 32a:	39 2f       	mov	r19, r25
 32c:	37 ff       	sbrs	r19, 7
 32e:	03 c0       	rjmp	.+6      	; 0x336 <absolute+0xe>
 330:	30 95       	com	r19
 332:	21 95       	neg	r18
 334:	3f 4f       	sbci	r19, 0xFF	; 255
 336:	c9 01       	movw	r24, r18
 338:	08 95       	ret

0000033a <set_off_motor_a>:
 33a:	8f ef       	ldi	r24, 0xFF	; 255
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	90 93 89 00 	sts	0x0089, r25
 342:	80 93 88 00 	sts	0x0088, r24
 346:	08 95       	ret

00000348 <set_off_motor_b>:
 348:	8f ef       	ldi	r24, 0xFF	; 255
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	90 93 8b 00 	sts	0x008B, r25
 350:	80 93 8a 00 	sts	0x008A, r24
 354:	08 95       	ret

00000356 <setSpeedMotorA>:
 356:	0e 94 94 01 	call	0x328	; 0x328 <absolute>
 35a:	28 2f       	mov	r18, r24
 35c:	39 2f       	mov	r19, r25
 35e:	2f 3f       	cpi	r18, 0xFF	; 255
 360:	31 05       	cpc	r19, r1
 362:	19 f0       	breq	.+6      	; 0x36a <setSpeedMotorA+0x14>
 364:	14 f0       	brlt	.+4      	; 0x36a <setSpeedMotorA+0x14>
 366:	2f ef       	ldi	r18, 0xFF	; 255
 368:	30 e0       	ldi	r19, 0x00	; 0
 36a:	8f ef       	ldi	r24, 0xFF	; 255
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	82 1b       	sub	r24, r18
 370:	93 0b       	sbc	r25, r19
 372:	90 93 89 00 	sts	0x0089, r25
 376:	80 93 88 00 	sts	0x0088, r24
 37a:	08 95       	ret

0000037c <setSpeedMotorB>:
 37c:	0e 94 94 01 	call	0x328	; 0x328 <absolute>
 380:	28 2f       	mov	r18, r24
 382:	39 2f       	mov	r19, r25
 384:	2f 3f       	cpi	r18, 0xFF	; 255
 386:	31 05       	cpc	r19, r1
 388:	19 f0       	breq	.+6      	; 0x390 <setSpeedMotorB+0x14>
 38a:	14 f0       	brlt	.+4      	; 0x390 <setSpeedMotorB+0x14>
 38c:	2f ef       	ldi	r18, 0xFF	; 255
 38e:	30 e0       	ldi	r19, 0x00	; 0
 390:	8f ef       	ldi	r24, 0xFF	; 255
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	82 1b       	sub	r24, r18
 396:	93 0b       	sbc	r25, r19
 398:	90 93 8b 00 	sts	0x008B, r25
 39c:	80 93 8a 00 	sts	0x008A, r24
 3a0:	08 95       	ret

000003a2 <chenge_direction_a>:
 3a2:	85 b1       	in	r24, 0x05	; 5
 3a4:	98 e0       	ldi	r25, 0x08	; 8
 3a6:	89 27       	eor	r24, r25
 3a8:	85 b9       	out	0x05, r24	; 5
 3aa:	08 95       	ret

000003ac <set_motor_a>:
 3ac:	cf 93       	push	r28
 3ae:	df 93       	push	r29
 3b0:	20 91 10 01 	lds	r18, 0x0110
 3b4:	30 91 11 01 	lds	r19, 0x0111
 3b8:	80 91 08 01 	lds	r24, 0x0108
 3bc:	90 91 09 01 	lds	r25, 0x0109
 3c0:	28 17       	cp	r18, r24
 3c2:	39 07       	cpc	r19, r25
 3c4:	b4 f4       	brge	.+44     	; 0x3f2 <set_motor_a+0x46>
 3c6:	20 91 12 01 	lds	r18, 0x0112
 3ca:	30 91 13 01 	lds	r19, 0x0113
 3ce:	27 5e       	subi	r18, 0xE7	; 231
 3d0:	3f 4f       	sbci	r19, 0xFF	; 255
 3d2:	4f ef       	ldi	r20, 0xFF	; 255
 3d4:	21 38       	cpi	r18, 0x81	; 129
 3d6:	34 07       	cpc	r19, r20
 3d8:	2c f0       	brlt	.+10     	; 0x3e4 <set_motor_a+0x38>
 3da:	82 17       	cp	r24, r18
 3dc:	93 07       	cpc	r25, r19
 3de:	24 f4       	brge	.+8      	; 0x3e8 <set_motor_a+0x3c>
 3e0:	9c 01       	movw	r18, r24
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <set_motor_a+0x3c>
 3e4:	21 e8       	ldi	r18, 0x81	; 129
 3e6:	3f ef       	ldi	r19, 0xFF	; 255
 3e8:	30 93 11 01 	sts	0x0111, r19
 3ec:	20 93 10 01 	sts	0x0110, r18
 3f0:	16 c0       	rjmp	.+44     	; 0x41e <set_motor_a+0x72>
 3f2:	82 17       	cp	r24, r18
 3f4:	93 07       	cpc	r25, r19
 3f6:	9c f4       	brge	.+38     	; 0x41e <set_motor_a+0x72>
 3f8:	20 91 12 01 	lds	r18, 0x0112
 3fc:	30 91 13 01 	lds	r19, 0x0113
 400:	29 51       	subi	r18, 0x19	; 25
 402:	30 40       	sbci	r19, 0x00	; 0
 404:	28 17       	cp	r18, r24
 406:	39 07       	cpc	r19, r25
 408:	34 f0       	brlt	.+12     	; 0x416 <set_motor_a+0x6a>
 40a:	c9 01       	movw	r24, r18
 40c:	20 38       	cpi	r18, 0x80	; 128
 40e:	31 05       	cpc	r19, r1
 410:	14 f0       	brlt	.+4      	; 0x416 <set_motor_a+0x6a>
 412:	8f e7       	ldi	r24, 0x7F	; 127
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	90 93 11 01 	sts	0x0111, r25
 41a:	80 93 10 01 	sts	0x0110, r24
 41e:	80 91 12 01 	lds	r24, 0x0112
 422:	90 91 13 01 	lds	r25, 0x0113
 426:	97 fd       	sbrc	r25, 7
 428:	03 c0       	rjmp	.+6      	; 0x430 <set_motor_a+0x84>
 42a:	21 e0       	ldi	r18, 0x01	; 1
 42c:	30 e0       	ldi	r19, 0x00	; 0
 42e:	02 c0       	rjmp	.+4      	; 0x434 <set_motor_a+0x88>
 430:	2f ef       	ldi	r18, 0xFF	; 255
 432:	3f ef       	ldi	r19, 0xFF	; 255
 434:	c0 91 10 01 	lds	r28, 0x0110
 438:	d0 91 11 01 	lds	r29, 0x0111
 43c:	d7 fd       	sbrc	r29, 7
 43e:	03 c0       	rjmp	.+6      	; 0x446 <set_motor_a+0x9a>
 440:	81 e0       	ldi	r24, 0x01	; 1
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	02 c0       	rjmp	.+4      	; 0x44a <set_motor_a+0x9e>
 446:	8f ef       	ldi	r24, 0xFF	; 255
 448:	9f ef       	ldi	r25, 0xFF	; 255
 44a:	28 17       	cp	r18, r24
 44c:	39 07       	cpc	r19, r25
 44e:	99 f0       	breq	.+38     	; 0x476 <set_motor_a+0xca>
 450:	8f ef       	ldi	r24, 0xFF	; 255
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	90 93 89 00 	sts	0x0089, r25
 458:	80 93 88 00 	sts	0x0088, r24
 45c:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <chenge_direction_a>
 460:	d0 93 13 01 	sts	0x0113, r29
 464:	c0 93 12 01 	sts	0x0112, r28
 468:	8b ea       	ldi	r24, 0xAB	; 171
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	90 93 01 01 	sts	0x0101, r25
 470:	80 93 00 01 	sts	0x0100, r24
 474:	09 c0       	rjmp	.+18     	; 0x488 <set_motor_a+0xdc>
 476:	d0 93 13 01 	sts	0x0113, r29
 47a:	c0 93 12 01 	sts	0x0112, r28
 47e:	ce 01       	movw	r24, r28
 480:	88 0f       	add	r24, r24
 482:	99 1f       	adc	r25, r25
 484:	0e 94 ab 01 	call	0x356	; 0x356 <setSpeedMotorA>
 488:	df 91       	pop	r29
 48a:	cf 91       	pop	r28
 48c:	08 95       	ret

0000048e <chenge_direction_b>:
 48e:	85 b1       	in	r24, 0x05	; 5
 490:	90 e1       	ldi	r25, 0x10	; 16
 492:	89 27       	eor	r24, r25
 494:	85 b9       	out	0x05, r24	; 5
 496:	08 95       	ret

00000498 <set_motor_b>:
 498:	cf 93       	push	r28
 49a:	df 93       	push	r29
 49c:	20 91 0c 01 	lds	r18, 0x010C
 4a0:	30 91 0d 01 	lds	r19, 0x010D
 4a4:	80 91 0a 01 	lds	r24, 0x010A
 4a8:	90 91 0b 01 	lds	r25, 0x010B
 4ac:	28 17       	cp	r18, r24
 4ae:	39 07       	cpc	r19, r25
 4b0:	b4 f4       	brge	.+44     	; 0x4de <set_motor_b+0x46>
 4b2:	20 91 0e 01 	lds	r18, 0x010E
 4b6:	30 91 0f 01 	lds	r19, 0x010F
 4ba:	27 5e       	subi	r18, 0xE7	; 231
 4bc:	3f 4f       	sbci	r19, 0xFF	; 255
 4be:	4f ef       	ldi	r20, 0xFF	; 255
 4c0:	21 38       	cpi	r18, 0x81	; 129
 4c2:	34 07       	cpc	r19, r20
 4c4:	2c f0       	brlt	.+10     	; 0x4d0 <set_motor_b+0x38>
 4c6:	82 17       	cp	r24, r18
 4c8:	93 07       	cpc	r25, r19
 4ca:	24 f4       	brge	.+8      	; 0x4d4 <set_motor_b+0x3c>
 4cc:	9c 01       	movw	r18, r24
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <set_motor_b+0x3c>
 4d0:	21 e8       	ldi	r18, 0x81	; 129
 4d2:	3f ef       	ldi	r19, 0xFF	; 255
 4d4:	30 93 0d 01 	sts	0x010D, r19
 4d8:	20 93 0c 01 	sts	0x010C, r18
 4dc:	16 c0       	rjmp	.+44     	; 0x50a <__stack+0xb>
 4de:	82 17       	cp	r24, r18
 4e0:	93 07       	cpc	r25, r19
 4e2:	9c f4       	brge	.+38     	; 0x50a <__stack+0xb>
 4e4:	20 91 0e 01 	lds	r18, 0x010E
 4e8:	30 91 0f 01 	lds	r19, 0x010F
 4ec:	29 51       	subi	r18, 0x19	; 25
 4ee:	30 40       	sbci	r19, 0x00	; 0
 4f0:	28 17       	cp	r18, r24
 4f2:	39 07       	cpc	r19, r25
 4f4:	34 f0       	brlt	.+12     	; 0x502 <__stack+0x3>
 4f6:	c9 01       	movw	r24, r18
 4f8:	20 38       	cpi	r18, 0x80	; 128
 4fa:	31 05       	cpc	r19, r1
 4fc:	14 f0       	brlt	.+4      	; 0x502 <__stack+0x3>
 4fe:	8f e7       	ldi	r24, 0x7F	; 127
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	90 93 0d 01 	sts	0x010D, r25
 506:	80 93 0c 01 	sts	0x010C, r24
 50a:	80 91 0e 01 	lds	r24, 0x010E
 50e:	90 91 0f 01 	lds	r25, 0x010F
 512:	97 fd       	sbrc	r25, 7
 514:	03 c0       	rjmp	.+6      	; 0x51c <__stack+0x1d>
 516:	21 e0       	ldi	r18, 0x01	; 1
 518:	30 e0       	ldi	r19, 0x00	; 0
 51a:	02 c0       	rjmp	.+4      	; 0x520 <__stack+0x21>
 51c:	2f ef       	ldi	r18, 0xFF	; 255
 51e:	3f ef       	ldi	r19, 0xFF	; 255
 520:	c0 91 0c 01 	lds	r28, 0x010C
 524:	d0 91 0d 01 	lds	r29, 0x010D
 528:	d7 fd       	sbrc	r29, 7
 52a:	03 c0       	rjmp	.+6      	; 0x532 <__stack+0x33>
 52c:	81 e0       	ldi	r24, 0x01	; 1
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	02 c0       	rjmp	.+4      	; 0x536 <__stack+0x37>
 532:	8f ef       	ldi	r24, 0xFF	; 255
 534:	9f ef       	ldi	r25, 0xFF	; 255
 536:	28 17       	cp	r18, r24
 538:	39 07       	cpc	r19, r25
 53a:	99 f0       	breq	.+38     	; 0x562 <__stack+0x63>
 53c:	8f ef       	ldi	r24, 0xFF	; 255
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	90 93 8b 00 	sts	0x008B, r25
 544:	80 93 8a 00 	sts	0x008A, r24
 548:	0e 94 47 02 	call	0x48e	; 0x48e <chenge_direction_b>
 54c:	d0 93 0f 01 	sts	0x010F, r29
 550:	c0 93 0e 01 	sts	0x010E, r28
 554:	83 ec       	ldi	r24, 0xC3	; 195
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	90 93 03 01 	sts	0x0103, r25
 55c:	80 93 02 01 	sts	0x0102, r24
 560:	09 c0       	rjmp	.+18     	; 0x574 <__stack+0x75>
 562:	d0 93 0f 01 	sts	0x010F, r29
 566:	c0 93 0e 01 	sts	0x010E, r28
 56a:	ce 01       	movw	r24, r28
 56c:	88 0f       	add	r24, r24
 56e:	99 1f       	adc	r25, r25
 570:	0e 94 be 01 	call	0x37c	; 0x37c <setSpeedMotorB>
 574:	df 91       	pop	r29
 576:	cf 91       	pop	r28
 578:	08 95       	ret

0000057a <limit>:
 57a:	86 17       	cp	r24, r22
 57c:	97 07       	cpc	r25, r23
 57e:	34 f0       	brlt	.+12     	; 0x58c <limit+0x12>
 580:	64 2f       	mov	r22, r20
 582:	75 2f       	mov	r23, r21
 584:	86 17       	cp	r24, r22
 586:	97 07       	cpc	r25, r23
 588:	0c f4       	brge	.+2      	; 0x58c <limit+0x12>
 58a:	bc 01       	movw	r22, r24
 58c:	cb 01       	movw	r24, r22
 58e:	08 95       	ret

00000590 <setTergetSpeed>:
 590:	90 93 09 01 	sts	0x0109, r25
 594:	80 93 08 01 	sts	0x0108, r24
 598:	70 93 0b 01 	sts	0x010B, r23
 59c:	60 93 0a 01 	sts	0x010A, r22
 5a0:	08 95       	ret

000005a2 <startMotorFunc>:
 5a2:	e0 91 00 01 	lds	r30, 0x0100
 5a6:	f0 91 01 01 	lds	r31, 0x0101
 5aa:	09 95       	icall
 5ac:	e0 91 02 01 	lds	r30, 0x0102
 5b0:	f0 91 03 01 	lds	r31, 0x0103
 5b4:	09 95       	icall
 5b6:	08 95       	ret

000005b8 <__vector_16>:
 5b8:	1f 92       	push	r1
 5ba:	0f 92       	push	r0
 5bc:	0f b6       	in	r0, 0x3f	; 63
 5be:	0f 92       	push	r0
 5c0:	11 24       	eor	r1, r1
 5c2:	2f 93       	push	r18
 5c4:	3f 93       	push	r19
 5c6:	4f 93       	push	r20
 5c8:	5f 93       	push	r21
 5ca:	6f 93       	push	r22
 5cc:	7f 93       	push	r23
 5ce:	8f 93       	push	r24
 5d0:	9f 93       	push	r25
 5d2:	af 93       	push	r26
 5d4:	bf 93       	push	r27
 5d6:	ef 93       	push	r30
 5d8:	ff 93       	push	r31
 5da:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <startMotorFunc>
 5de:	ff 91       	pop	r31
 5e0:	ef 91       	pop	r30
 5e2:	bf 91       	pop	r27
 5e4:	af 91       	pop	r26
 5e6:	9f 91       	pop	r25
 5e8:	8f 91       	pop	r24
 5ea:	7f 91       	pop	r23
 5ec:	6f 91       	pop	r22
 5ee:	5f 91       	pop	r21
 5f0:	4f 91       	pop	r20
 5f2:	3f 91       	pop	r19
 5f4:	2f 91       	pop	r18
 5f6:	0f 90       	pop	r0
 5f8:	0f be       	out	0x3f, r0	; 63
 5fa:	0f 90       	pop	r0
 5fc:	1f 90       	pop	r1
 5fe:	18 95       	reti

00000600 <_exit>:
 600:	f8 94       	cli

00000602 <__stop_program>:
 602:	ff cf       	rjmp	.-2      	; 0x602 <__stop_program>
