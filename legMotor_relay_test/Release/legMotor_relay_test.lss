
legMotor_relay_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000005ba  0000064e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005ba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  00800104  00800104  00000652  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00000654  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000090  00000000  00000000  00000d20  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__vector_24>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea eb       	ldi	r30, 0xBA	; 186
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	11 e0       	ldi	r17, 0x01	; 1
  8c:	a4 e0       	ldi	r26, 0x04	; 4
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 32       	cpi	r26, 0x20	; 32
  96:	b1 07       	cpc	r27, r17
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 2b 01 	call	0x256	; 0x256 <main>
  9e:	0c 94 db 02 	jmp	0x5b6	; 0x5b6 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <I2CSlave_do>:
  a6:	80 91 b9 00 	lds	r24, 0x00B9
  aa:	80 3a       	cpi	r24, 0xA0	; 160
  ac:	79 f1       	breq	.+94     	; 0x10c <I2CSlave_do+0x66>
  ae:	81 3a       	cpi	r24, 0xA1	; 161
  b0:	28 f4       	brcc	.+10     	; 0xbc <I2CSlave_do+0x16>
  b2:	80 36       	cpi	r24, 0x60	; 96
  b4:	51 f0       	breq	.+20     	; 0xca <I2CSlave_do+0x24>
  b6:	80 38       	cpi	r24, 0x80	; 128
  b8:	89 f5       	brne	.+98     	; 0x11c <I2CSlave_do+0x76>
  ba:	0e c0       	rjmp	.+28     	; 0xd8 <I2CSlave_do+0x32>
  bc:	88 3b       	cpi	r24, 0xB8	; 184
  be:	d9 f0       	breq	.+54     	; 0xf6 <I2CSlave_do+0x50>
  c0:	80 3c       	cpi	r24, 0xC0	; 192
  c2:	21 f1       	breq	.+72     	; 0x10c <I2CSlave_do+0x66>
  c4:	88 3a       	cpi	r24, 0xA8	; 168
  c6:	51 f5       	brne	.+84     	; 0x11c <I2CSlave_do+0x76>
  c8:	0f c0       	rjmp	.+30     	; 0xe8 <I2CSlave_do+0x42>
  ca:	80 91 bb 00 	lds	r24, 0x00BB
  ce:	e0 91 0e 01 	lds	r30, 0x010E
  d2:	f0 91 0f 01 	lds	r31, 0x010F
  d6:	06 c0       	rjmp	.+12     	; 0xe4 <I2CSlave_do+0x3e>
  d8:	80 91 bb 00 	lds	r24, 0x00BB
  dc:	e0 91 0c 01 	lds	r30, 0x010C
  e0:	f0 91 0d 01 	lds	r31, 0x010D
  e4:	09 95       	icall
  e6:	0e c0       	rjmp	.+28     	; 0x104 <I2CSlave_do+0x5e>
  e8:	80 91 bb 00 	lds	r24, 0x00BB
  ec:	e0 91 0e 01 	lds	r30, 0x010E
  f0:	f0 91 0f 01 	lds	r31, 0x010F
  f4:	09 95       	icall
  f6:	e0 91 08 01 	lds	r30, 0x0108
  fa:	f0 91 09 01 	lds	r31, 0x0109
  fe:	09 95       	icall
 100:	80 93 bb 00 	sts	0x00BB, r24
 104:	84 ec       	ldi	r24, 0xC4	; 196
 106:	80 93 bc 00 	sts	0x00BC, r24
 10a:	08 95       	ret
 10c:	e0 91 0a 01 	lds	r30, 0x010A
 110:	f0 91 0b 01 	lds	r31, 0x010B
 114:	09 95       	icall
 116:	84 ec       	ldi	r24, 0xC4	; 196
 118:	80 93 bc 00 	sts	0x00BC, r24
 11c:	08 95       	ret

0000011e <initHandler>:
 11e:	08 95       	ret

00000120 <recieveHandler>:
 120:	90 91 06 01 	lds	r25, 0x0106
 124:	e9 2f       	mov	r30, r25
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	ec 5f       	subi	r30, 0xFC	; 252
 12a:	fe 4f       	sbci	r31, 0xFE	; 254
 12c:	80 83       	st	Z, r24
 12e:	9f 5f       	subi	r25, 0xFF	; 255
 130:	90 93 06 01 	sts	0x0106, r25
 134:	08 95       	ret

00000136 <sendHandler>:
 136:	90 91 07 01 	lds	r25, 0x0107
 13a:	e9 2f       	mov	r30, r25
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	ec 5f       	subi	r30, 0xFC	; 252
 140:	fe 4f       	sbci	r31, 0xFE	; 254
 142:	80 81       	ld	r24, Z
 144:	9f 5f       	subi	r25, 0xFF	; 255
 146:	90 93 07 01 	sts	0x0107, r25
 14a:	08 95       	ret

0000014c <stopHandler>:
 14c:	10 92 06 01 	sts	0x0106, r1
 150:	10 92 07 01 	sts	0x0107, r1
 154:	08 95       	ret

00000156 <I2CSlave_init>:
 156:	88 0f       	add	r24, r24
 158:	80 93 ba 00 	sts	0x00BA, r24
 15c:	61 30       	cpi	r22, 0x01	; 1
 15e:	11 f4       	brne	.+4      	; 0x164 <I2CSlave_init+0xe>
 160:	85 e4       	ldi	r24, 0x45	; 69
 162:	01 c0       	rjmp	.+2      	; 0x166 <I2CSlave_init+0x10>
 164:	84 e4       	ldi	r24, 0x44	; 68
 166:	80 93 bc 00 	sts	0x00BC, r24
 16a:	08 95       	ret

0000016c <__vector_24>:
 16c:	1f 92       	push	r1
 16e:	0f 92       	push	r0
 170:	0f b6       	in	r0, 0x3f	; 63
 172:	0f 92       	push	r0
 174:	11 24       	eor	r1, r1
 176:	2f 93       	push	r18
 178:	3f 93       	push	r19
 17a:	4f 93       	push	r20
 17c:	5f 93       	push	r21
 17e:	6f 93       	push	r22
 180:	7f 93       	push	r23
 182:	8f 93       	push	r24
 184:	9f 93       	push	r25
 186:	af 93       	push	r26
 188:	bf 93       	push	r27
 18a:	ef 93       	push	r30
 18c:	ff 93       	push	r31
 18e:	f8 94       	cli
 190:	0e 94 53 00 	call	0xa6	; 0xa6 <I2CSlave_do>
 194:	78 94       	sei
 196:	ff 91       	pop	r31
 198:	ef 91       	pop	r30
 19a:	bf 91       	pop	r27
 19c:	af 91       	pop	r26
 19e:	9f 91       	pop	r25
 1a0:	8f 91       	pop	r24
 1a2:	7f 91       	pop	r23
 1a4:	6f 91       	pop	r22
 1a6:	5f 91       	pop	r21
 1a8:	4f 91       	pop	r20
 1aa:	3f 91       	pop	r19
 1ac:	2f 91       	pop	r18
 1ae:	0f 90       	pop	r0
 1b0:	0f be       	out	0x3f, r0	; 63
 1b2:	0f 90       	pop	r0
 1b4:	1f 90       	pop	r1
 1b6:	18 95       	reti

000001b8 <I2CSlave_setInitEvent>:
 1b8:	90 93 0f 01 	sts	0x010F, r25
 1bc:	80 93 0e 01 	sts	0x010E, r24
 1c0:	08 95       	ret

000001c2 <I2CSlave_setReceiveEvent>:
 1c2:	90 93 0d 01 	sts	0x010D, r25
 1c6:	80 93 0c 01 	sts	0x010C, r24
 1ca:	08 95       	ret

000001cc <I2CSlave_setStopEvent>:
 1cc:	90 93 0b 01 	sts	0x010B, r25
 1d0:	80 93 0a 01 	sts	0x010A, r24
 1d4:	08 95       	ret

000001d6 <I2CSlave_setSendEvent>:
 1d6:	90 93 09 01 	sts	0x0109, r25
 1da:	80 93 08 01 	sts	0x0108, r24
 1de:	08 95       	ret

000001e0 <I2CSlave_isTWINT>:
 1e0:	80 91 bc 00 	lds	r24, 0x00BC
 1e4:	88 1f       	adc	r24, r24
 1e6:	88 27       	eor	r24, r24
 1e8:	88 1f       	adc	r24, r24
 1ea:	08 95       	ret

000001ec <I2CSlave_com>:
 1ec:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <I2CSlave_isTWINT>
 1f0:	88 23       	and	r24, r24
 1f2:	11 f0       	breq	.+4      	; 0x1f8 <I2CSlave_com+0xc>
 1f4:	0e 94 53 00 	call	0xa6	; 0xa6 <I2CSlave_do>
 1f8:	08 95       	ret

000001fa <__vector_16>:
 1fa:	1f 92       	push	r1
 1fc:	0f 92       	push	r0
 1fe:	0f b6       	in	r0, 0x3f	; 63
 200:	0f 92       	push	r0
 202:	11 24       	eor	r1, r1
 204:	2f 93       	push	r18
 206:	3f 93       	push	r19
 208:	4f 93       	push	r20
 20a:	5f 93       	push	r21
 20c:	6f 93       	push	r22
 20e:	7f 93       	push	r23
 210:	8f 93       	push	r24
 212:	9f 93       	push	r25
 214:	af 93       	push	r26
 216:	bf 93       	push	r27
 218:	ef 93       	push	r30
 21a:	ff 93       	push	r31
 21c:	0e 94 d7 01 	call	0x3ae	; 0x3ae <startMotorFunc>
 220:	ff 91       	pop	r31
 222:	ef 91       	pop	r30
 224:	bf 91       	pop	r27
 226:	af 91       	pop	r26
 228:	9f 91       	pop	r25
 22a:	8f 91       	pop	r24
 22c:	7f 91       	pop	r23
 22e:	6f 91       	pop	r22
 230:	5f 91       	pop	r21
 232:	4f 91       	pop	r20
 234:	3f 91       	pop	r19
 236:	2f 91       	pop	r18
 238:	0f 90       	pop	r0
 23a:	0f be       	out	0x3f, r0	; 63
 23c:	0f 90       	pop	r0
 23e:	1f 90       	pop	r1
 240:	18 95       	reti

00000242 <chengeSignalToSpeed>:
 242:	28 2f       	mov	r18, r24
 244:	26 95       	lsr	r18
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	80 ff       	sbrs	r24, 0
 24a:	03 c0       	rjmp	.+6      	; 0x252 <chengeSignalToSpeed+0x10>
 24c:	30 95       	com	r19
 24e:	21 95       	neg	r18
 250:	3f 4f       	sbci	r19, 0xFF	; 255
 252:	c9 01       	movw	r24, r18
 254:	08 95       	ret

00000256 <main>:
 256:	cf 93       	push	r28
 258:	df 93       	push	r29
 25a:	0e 94 a9 01 	call	0x352	; 0x352 <timer_pwm_init>
 25e:	0e 94 b8 01 	call	0x370	; 0x370 <io_init>
 262:	0e 94 bc 01 	call	0x378	; 0x378 <timer0_init>
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	60 e0       	ldi	r22, 0x00	; 0
 26a:	0e 94 ab 00 	call	0x156	; 0x156 <I2CSlave_init>
 26e:	8f e8       	ldi	r24, 0x8F	; 143
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	90 93 0f 01 	sts	0x010F, r25
 276:	80 93 0e 01 	sts	0x010E, r24
 27a:	8b e9       	ldi	r24, 0x9B	; 155
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	90 93 09 01 	sts	0x0109, r25
 282:	80 93 08 01 	sts	0x0108, r24
 286:	80 e9       	ldi	r24, 0x90	; 144
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	90 93 0d 01 	sts	0x010D, r25
 28e:	80 93 0c 01 	sts	0x010C, r24
 292:	86 ea       	ldi	r24, 0xA6	; 166
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	90 93 0b 01 	sts	0x010B, r25
 29a:	80 93 0a 01 	sts	0x010A, r24
 29e:	78 94       	sei
 2a0:	0e 94 f6 00 	call	0x1ec	; 0x1ec <I2CSlave_com>
 2a4:	80 91 04 01 	lds	r24, 0x0104
 2a8:	0e 94 21 01 	call	0x242	; 0x242 <chengeSignalToSpeed>
 2ac:	ec 01       	movw	r28, r24
 2ae:	80 91 05 01 	lds	r24, 0x0105
 2b2:	0e 94 21 01 	call	0x242	; 0x242 <chengeSignalToSpeed>
 2b6:	bc 01       	movw	r22, r24
 2b8:	ce 01       	movw	r24, r28
 2ba:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <setTargetSpeed>
 2be:	f0 cf       	rjmp	.-32     	; 0x2a0 <main+0x4a>

000002c0 <limit>:
 2c0:	86 17       	cp	r24, r22
 2c2:	97 07       	cpc	r25, r23
 2c4:	34 f0       	brlt	.+12     	; 0x2d2 <limit+0x12>
 2c6:	64 2f       	mov	r22, r20
 2c8:	75 2f       	mov	r23, r21
 2ca:	86 17       	cp	r24, r22
 2cc:	97 07       	cpc	r25, r23
 2ce:	0c f4       	brge	.+2      	; 0x2d2 <limit+0x12>
 2d0:	bc 01       	movw	r22, r24
 2d2:	cb 01       	movw	r24, r22
 2d4:	08 95       	ret

000002d6 <set_off_motor_a>:
 2d6:	8f ef       	ldi	r24, 0xFF	; 255
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	90 93 89 00 	sts	0x0089, r25
 2de:	80 93 88 00 	sts	0x0088, r24
 2e2:	08 95       	ret

000002e4 <set_off_motor_b>:
 2e4:	8f ef       	ldi	r24, 0xFF	; 255
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	90 93 8b 00 	sts	0x008B, r25
 2ec:	80 93 8a 00 	sts	0x008A, r24
 2f0:	08 95       	ret

000002f2 <wait_motor_a_chatterring>:
 2f2:	80 91 16 01 	lds	r24, 0x0116
 2f6:	90 91 17 01 	lds	r25, 0x0117
 2fa:	85 30       	cpi	r24, 0x05	; 5
 2fc:	91 05       	cpc	r25, r1
 2fe:	34 f4       	brge	.+12     	; 0x30c <wait_motor_a_chatterring+0x1a>
 300:	01 96       	adiw	r24, 0x01	; 1
 302:	90 93 17 01 	sts	0x0117, r25
 306:	80 93 16 01 	sts	0x0116, r24
 30a:	08 95       	ret
 30c:	10 92 17 01 	sts	0x0117, r1
 310:	10 92 16 01 	sts	0x0116, r1
 314:	8b e6       	ldi	r24, 0x6B	; 107
 316:	91 e0       	ldi	r25, 0x01	; 1
 318:	90 93 01 01 	sts	0x0101, r25
 31c:	80 93 00 01 	sts	0x0100, r24
 320:	08 95       	ret

00000322 <wait_motor_b_chatterring>:
 322:	80 91 14 01 	lds	r24, 0x0114
 326:	90 91 15 01 	lds	r25, 0x0115
 32a:	85 30       	cpi	r24, 0x05	; 5
 32c:	91 05       	cpc	r25, r1
 32e:	34 f4       	brge	.+12     	; 0x33c <wait_motor_b_chatterring+0x1a>
 330:	01 96       	adiw	r24, 0x01	; 1
 332:	90 93 15 01 	sts	0x0115, r25
 336:	80 93 14 01 	sts	0x0114, r24
 33a:	08 95       	ret
 33c:	10 92 15 01 	sts	0x0115, r1
 340:	10 92 14 01 	sts	0x0114, r1
 344:	82 e7       	ldi	r24, 0x72	; 114
 346:	91 e0       	ldi	r25, 0x01	; 1
 348:	90 93 03 01 	sts	0x0103, r25
 34c:	80 93 02 01 	sts	0x0102, r24
 350:	08 95       	ret

00000352 <timer_pwm_init>:
 352:	8f ef       	ldi	r24, 0xFF	; 255
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	90 93 89 00 	sts	0x0089, r25
 35a:	80 93 88 00 	sts	0x0088, r24
 35e:	8f ef       	ldi	r24, 0xFF	; 255
 360:	88 bd       	out	0x28, r24	; 40
 362:	81 ef       	ldi	r24, 0xF1	; 241
 364:	80 93 80 00 	sts	0x0080, r24
 368:	8a e0       	ldi	r24, 0x0A	; 10
 36a:	80 93 81 00 	sts	0x0081, r24
 36e:	08 95       	ret

00000370 <io_init>:
 370:	15 b8       	out	0x05, r1	; 5
 372:	8e e1       	ldi	r24, 0x1E	; 30
 374:	84 b9       	out	0x04, r24	; 4
 376:	08 95       	ret

00000378 <timer0_init>:
 378:	83 e0       	ldi	r24, 0x03	; 3
 37a:	85 bd       	out	0x25, r24	; 37
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	80 93 6e 00 	sts	0x006E, r24
 382:	08 95       	ret

00000384 <absolute>:
 384:	28 2f       	mov	r18, r24
 386:	39 2f       	mov	r19, r25
 388:	37 ff       	sbrs	r19, 7
 38a:	03 c0       	rjmp	.+6      	; 0x392 <absolute+0xe>
 38c:	30 95       	com	r19
 38e:	21 95       	neg	r18
 390:	3f 4f       	sbci	r19, 0xFF	; 255
 392:	c9 01       	movw	r24, r18
 394:	08 95       	ret

00000396 <check_sign>:
 396:	fc 01       	movw	r30, r24
 398:	80 81       	ld	r24, Z
 39a:	91 81       	ldd	r25, Z+1	; 0x01
 39c:	97 fd       	sbrc	r25, 7
 39e:	03 c0       	rjmp	.+6      	; 0x3a6 <check_sign+0x10>
 3a0:	21 e0       	ldi	r18, 0x01	; 1
 3a2:	30 e0       	ldi	r19, 0x00	; 0
 3a4:	02 c0       	rjmp	.+4      	; 0x3aa <check_sign+0x14>
 3a6:	2f ef       	ldi	r18, 0xFF	; 255
 3a8:	3f ef       	ldi	r19, 0xFF	; 255
 3aa:	c9 01       	movw	r24, r18
 3ac:	08 95       	ret

000003ae <startMotorFunc>:
 3ae:	e0 91 00 01 	lds	r30, 0x0100
 3b2:	f0 91 01 01 	lds	r31, 0x0101
 3b6:	09 95       	icall
 3b8:	e0 91 02 01 	lds	r30, 0x0102
 3bc:	f0 91 03 01 	lds	r31, 0x0103
 3c0:	09 95       	icall
 3c2:	08 95       	ret

000003c4 <setSpeedMotorA>:
 3c4:	0e 94 c2 01 	call	0x384	; 0x384 <absolute>
 3c8:	28 2f       	mov	r18, r24
 3ca:	39 2f       	mov	r19, r25
 3cc:	2f 3f       	cpi	r18, 0xFF	; 255
 3ce:	31 05       	cpc	r19, r1
 3d0:	19 f0       	breq	.+6      	; 0x3d8 <setSpeedMotorA+0x14>
 3d2:	14 f0       	brlt	.+4      	; 0x3d8 <setSpeedMotorA+0x14>
 3d4:	2f ef       	ldi	r18, 0xFF	; 255
 3d6:	30 e0       	ldi	r19, 0x00	; 0
 3d8:	8f ef       	ldi	r24, 0xFF	; 255
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	82 1b       	sub	r24, r18
 3de:	93 0b       	sbc	r25, r19
 3e0:	90 93 89 00 	sts	0x0089, r25
 3e4:	80 93 88 00 	sts	0x0088, r24
 3e8:	08 95       	ret

000003ea <chenge_direction_a>:
 3ea:	85 b1       	in	r24, 0x05	; 5
 3ec:	98 e0       	ldi	r25, 0x08	; 8
 3ee:	89 27       	eor	r24, r25
 3f0:	85 b9       	out	0x05, r24	; 5
 3f2:	08 95       	ret

000003f4 <set_motor_a>:
 3f4:	cf 93       	push	r28
 3f6:	df 93       	push	r29
 3f8:	80 91 1c 01 	lds	r24, 0x011C
 3fc:	90 91 1d 01 	lds	r25, 0x011D
 400:	40 91 10 01 	lds	r20, 0x0110
 404:	50 91 11 01 	lds	r21, 0x0111
 408:	84 17       	cp	r24, r20
 40a:	95 07       	cpc	r25, r21
 40c:	44 f4       	brge	.+16     	; 0x41e <set_motor_a+0x2a>
 40e:	80 91 1e 01 	lds	r24, 0x011E
 412:	90 91 1f 01 	lds	r25, 0x011F
 416:	49 96       	adiw	r24, 0x19	; 25
 418:	61 e8       	ldi	r22, 0x81	; 129
 41a:	7f ef       	ldi	r23, 0xFF	; 255
 41c:	0b c0       	rjmp	.+22     	; 0x434 <set_motor_a+0x40>
 41e:	48 17       	cp	r20, r24
 420:	59 07       	cpc	r21, r25
 422:	74 f4       	brge	.+28     	; 0x440 <set_motor_a+0x4c>
 424:	80 91 1e 01 	lds	r24, 0x011E
 428:	90 91 1f 01 	lds	r25, 0x011F
 42c:	49 97       	sbiw	r24, 0x19	; 25
 42e:	ba 01       	movw	r22, r20
 430:	4f e7       	ldi	r20, 0x7F	; 127
 432:	50 e0       	ldi	r21, 0x00	; 0
 434:	0e 94 60 01 	call	0x2c0	; 0x2c0 <limit>
 438:	90 93 1d 01 	sts	0x011D, r25
 43c:	80 93 1c 01 	sts	0x011C, r24
 440:	80 91 1e 01 	lds	r24, 0x011E
 444:	90 91 1f 01 	lds	r25, 0x011F
 448:	97 fd       	sbrc	r25, 7
 44a:	03 c0       	rjmp	.+6      	; 0x452 <set_motor_a+0x5e>
 44c:	21 e0       	ldi	r18, 0x01	; 1
 44e:	30 e0       	ldi	r19, 0x00	; 0
 450:	02 c0       	rjmp	.+4      	; 0x456 <set_motor_a+0x62>
 452:	2f ef       	ldi	r18, 0xFF	; 255
 454:	3f ef       	ldi	r19, 0xFF	; 255
 456:	c0 91 1c 01 	lds	r28, 0x011C
 45a:	d0 91 1d 01 	lds	r29, 0x011D
 45e:	d7 fd       	sbrc	r29, 7
 460:	03 c0       	rjmp	.+6      	; 0x468 <set_motor_a+0x74>
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	02 c0       	rjmp	.+4      	; 0x46c <set_motor_a+0x78>
 468:	8f ef       	ldi	r24, 0xFF	; 255
 46a:	9f ef       	ldi	r25, 0xFF	; 255
 46c:	28 17       	cp	r18, r24
 46e:	39 07       	cpc	r19, r25
 470:	99 f0       	breq	.+38     	; 0x498 <set_motor_a+0xa4>
 472:	8f ef       	ldi	r24, 0xFF	; 255
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	90 93 89 00 	sts	0x0089, r25
 47a:	80 93 88 00 	sts	0x0088, r24
 47e:	0e 94 f5 01 	call	0x3ea	; 0x3ea <chenge_direction_a>
 482:	d0 93 1f 01 	sts	0x011F, r29
 486:	c0 93 1e 01 	sts	0x011E, r28
 48a:	89 e7       	ldi	r24, 0x79	; 121
 48c:	91 e0       	ldi	r25, 0x01	; 1
 48e:	90 93 01 01 	sts	0x0101, r25
 492:	80 93 00 01 	sts	0x0100, r24
 496:	09 c0       	rjmp	.+18     	; 0x4aa <set_motor_a+0xb6>
 498:	d0 93 1f 01 	sts	0x011F, r29
 49c:	c0 93 1e 01 	sts	0x011E, r28
 4a0:	ce 01       	movw	r24, r28
 4a2:	88 0f       	add	r24, r24
 4a4:	99 1f       	adc	r25, r25
 4a6:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <setSpeedMotorA>
 4aa:	df 91       	pop	r29
 4ac:	cf 91       	pop	r28
 4ae:	08 95       	ret

000004b0 <setSpeedMotorB>:
 4b0:	0e 94 c2 01 	call	0x384	; 0x384 <absolute>
 4b4:	28 2f       	mov	r18, r24
 4b6:	39 2f       	mov	r19, r25
 4b8:	2f 3f       	cpi	r18, 0xFF	; 255
 4ba:	31 05       	cpc	r19, r1
 4bc:	19 f0       	breq	.+6      	; 0x4c4 <setSpeedMotorB+0x14>
 4be:	14 f0       	brlt	.+4      	; 0x4c4 <setSpeedMotorB+0x14>
 4c0:	2f ef       	ldi	r18, 0xFF	; 255
 4c2:	30 e0       	ldi	r19, 0x00	; 0
 4c4:	8f ef       	ldi	r24, 0xFF	; 255
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	82 1b       	sub	r24, r18
 4ca:	93 0b       	sbc	r25, r19
 4cc:	90 93 8b 00 	sts	0x008B, r25
 4d0:	80 93 8a 00 	sts	0x008A, r24
 4d4:	08 95       	ret

000004d6 <chenge_direction_b>:
 4d6:	85 b1       	in	r24, 0x05	; 5
 4d8:	90 e1       	ldi	r25, 0x10	; 16
 4da:	89 27       	eor	r24, r25
 4dc:	85 b9       	out	0x05, r24	; 5
 4de:	08 95       	ret

000004e0 <set_motor_b>:
 4e0:	cf 93       	push	r28
 4e2:	df 93       	push	r29
 4e4:	80 91 18 01 	lds	r24, 0x0118
 4e8:	90 91 19 01 	lds	r25, 0x0119
 4ec:	40 91 12 01 	lds	r20, 0x0112
 4f0:	50 91 13 01 	lds	r21, 0x0113
 4f4:	84 17       	cp	r24, r20
 4f6:	95 07       	cpc	r25, r21
 4f8:	44 f4       	brge	.+16     	; 0x50a <__stack+0xb>
 4fa:	80 91 1a 01 	lds	r24, 0x011A
 4fe:	90 91 1b 01 	lds	r25, 0x011B
 502:	49 96       	adiw	r24, 0x19	; 25
 504:	61 e8       	ldi	r22, 0x81	; 129
 506:	7f ef       	ldi	r23, 0xFF	; 255
 508:	0b c0       	rjmp	.+22     	; 0x520 <__stack+0x21>
 50a:	48 17       	cp	r20, r24
 50c:	59 07       	cpc	r21, r25
 50e:	74 f4       	brge	.+28     	; 0x52c <__stack+0x2d>
 510:	80 91 1a 01 	lds	r24, 0x011A
 514:	90 91 1b 01 	lds	r25, 0x011B
 518:	49 97       	sbiw	r24, 0x19	; 25
 51a:	ba 01       	movw	r22, r20
 51c:	4f e7       	ldi	r20, 0x7F	; 127
 51e:	50 e0       	ldi	r21, 0x00	; 0
 520:	0e 94 60 01 	call	0x2c0	; 0x2c0 <limit>
 524:	90 93 19 01 	sts	0x0119, r25
 528:	80 93 18 01 	sts	0x0118, r24
 52c:	e0 91 1a 01 	lds	r30, 0x011A
 530:	f0 91 1b 01 	lds	r31, 0x011B
 534:	80 81       	ld	r24, Z
 536:	91 81       	ldd	r25, Z+1	; 0x01
 538:	97 fd       	sbrc	r25, 7
 53a:	03 c0       	rjmp	.+6      	; 0x542 <__stack+0x43>
 53c:	21 e0       	ldi	r18, 0x01	; 1
 53e:	30 e0       	ldi	r19, 0x00	; 0
 540:	02 c0       	rjmp	.+4      	; 0x546 <__stack+0x47>
 542:	2f ef       	ldi	r18, 0xFF	; 255
 544:	3f ef       	ldi	r19, 0xFF	; 255
 546:	c0 91 18 01 	lds	r28, 0x0118
 54a:	d0 91 19 01 	lds	r29, 0x0119
 54e:	88 81       	ld	r24, Y
 550:	99 81       	ldd	r25, Y+1	; 0x01
 552:	97 fd       	sbrc	r25, 7
 554:	03 c0       	rjmp	.+6      	; 0x55c <__stack+0x5d>
 556:	81 e0       	ldi	r24, 0x01	; 1
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	02 c0       	rjmp	.+4      	; 0x560 <__stack+0x61>
 55c:	8f ef       	ldi	r24, 0xFF	; 255
 55e:	9f ef       	ldi	r25, 0xFF	; 255
 560:	28 17       	cp	r18, r24
 562:	39 07       	cpc	r19, r25
 564:	99 f0       	breq	.+38     	; 0x58c <__stack+0x8d>
 566:	8f ef       	ldi	r24, 0xFF	; 255
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	90 93 8b 00 	sts	0x008B, r25
 56e:	80 93 8a 00 	sts	0x008A, r24
 572:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <chenge_direction_b>
 576:	d0 93 1b 01 	sts	0x011B, r29
 57a:	c0 93 1a 01 	sts	0x011A, r28
 57e:	81 e9       	ldi	r24, 0x91	; 145
 580:	91 e0       	ldi	r25, 0x01	; 1
 582:	90 93 03 01 	sts	0x0103, r25
 586:	80 93 02 01 	sts	0x0102, r24
 58a:	09 c0       	rjmp	.+18     	; 0x59e <__stack+0x9f>
 58c:	d0 93 1b 01 	sts	0x011B, r29
 590:	c0 93 1a 01 	sts	0x011A, r28
 594:	ce 01       	movw	r24, r28
 596:	88 0f       	add	r24, r24
 598:	99 1f       	adc	r25, r25
 59a:	0e 94 58 02 	call	0x4b0	; 0x4b0 <setSpeedMotorB>
 59e:	df 91       	pop	r29
 5a0:	cf 91       	pop	r28
 5a2:	08 95       	ret

000005a4 <setTargetSpeed>:
 5a4:	90 93 11 01 	sts	0x0111, r25
 5a8:	80 93 10 01 	sts	0x0110, r24
 5ac:	70 93 13 01 	sts	0x0113, r23
 5b0:	60 93 12 01 	sts	0x0112, r22
 5b4:	08 95       	ret

000005b6 <_exit>:
 5b6:	f8 94       	cli

000005b8 <__stop_program>:
 5b8:	ff cf       	rjmp	.-2      	; 0x5b8 <__stop_program>
